/// <summary>
/// This source file was auto-generated by a tool - Any changes may be overwritten!
/// From Unity assembly definition: UltimateReplay.dll
/// From source file: Assets/Ultimate Replay 3.0/Scripts/Runtime/ReplayComponents/ReplayTransform.cs
/// </summary>
using System;
using UltimateReplay.Formatters;
using UnityEngine;

namespace UltimateReplay
{
    [DisallowMultipleComponent]
    public class ReplayTransform : ReplayRecordableBehaviour
    {
        // Properties
        public override ReplayFormatter Formatter
        {
            get => throw new System.NotImplementedException();
        }

        public RecordAxisFlags ReplayPosition
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordSpace PositionSpace
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordPrecision PositionPrecision
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordAxisFlags ReplayRotation
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordSpace RotationSpace
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordPrecision RotationPrecision
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordAxisFlags ReplayScale
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordPrecision ScalePrecision
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        // Methods 
#if UNITY_EDITOR
        private void OnValidate()
        {
            // Update serialize flags
            UpdateSerializeFlags();
        }
#endif
        protected override void Reset() => throw new System.NotImplementedException();
        protected override void Awake() => throw new System.NotImplementedException();
        protected override void OnReplayReset() => throw new System.NotImplementedException();
        protected override void OnReplaySpawned(Vector3 position, Quaternion rotation) => throw new System.NotImplementedException();
        protected override void OnReplayUpdate(float t) => throw new System.NotImplementedException();
        public override void OnReplaySerialize(ReplayState state) => throw new System.NotImplementedException();
        public override void OnReplayDeserialize(ReplayState state) => throw new System.NotImplementedException();
    }
}