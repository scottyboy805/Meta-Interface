/// <summary>
/// This source file was auto-generated by a tool - Any changes may be overwritten!
/// From Unity assembly definition: UltimateReplay.dll
/// From source file: Assets/Ultimate Replay 3.0/Scripts/Runtime/ReplayComponents/ReplayRiggedGeneric.cs
/// </summary>
using System;
using System.Collections.Generic;
using UltimateReplay.Formatters;
using UnityEditor;
using UnityEngine;

namespace UltimateReplay
{
    [DisallowMultipleComponent]
    public sealed class ReplayRiggedGeneric : ReplayRecordableBehaviour
    {
        // Public
        public Transform observedRootBone;
        public Transform[] observedBones;
        // Properties
        public override ReplayFormatter Formatter
        {
            get
            {
                return formatter;
            }
        }

        public RecordAxisFlags ReplayBonePosition
        {
            get
            {
                return replayBonePosition;
            }

            set
            {
                replayBonePosition = value;
                UpdateSerializeFlags();
            }
        }

        public RecordPrecision BonePositionPrecision
        {
            get
            {
                return bonePositionPrecision;
            }

            set
            {
                bonePositionPrecision = value;
                UpdateSerializeFlags();
            }
        }

        public RecordAxisFlags ReplayBoneRotation
        {
            get
            {
                return replayBoneRotation;
            }

            set
            {
                replayBoneRotation = value;
                UpdateSerializeFlags();
            }
        }

        public RecordPrecision BoneRotationPrecision
        {
            get
            {
                return boneRotationPrecision;
            }

            set
            {
                boneRotationPrecision = value;
                UpdateSerializeFlags();
            }
        }

        public RecordAxisFlags ReplayBoneScale
        {
            get
            {
                return replayBoneScale;
            }

            set
            {
                replayBoneScale = value;
                UpdateSerializeFlags();
            }
        }

        public RecordPrecision BoneScalePrecision
        {
            get
            {
                return boneScalePrecision;
            }

            set
            {
                boneScalePrecision = value;
                UpdateSerializeFlags();
            }
        }

        // Methods
#if UNITY_EDITOR
        private void OnValidate()
        {
            // Update serialize flags
            UpdateSerializeFlags();
        }
#endif
        protected override void Reset() => throw new System.NotImplementedException();
        protected override void Awake() => throw new System.NotImplementedException();
        public void AutoDetectRigBones() => throw new System.NotImplementedException();
        protected override void OnReplayReset() => throw new System.NotImplementedException();
        protected override void OnReplayStart() => throw new System.NotImplementedException();
        protected override void OnReplayUpdate(float t) => throw new System.NotImplementedException();
        public override void OnReplaySerialize(ReplayState state) => throw new System.NotImplementedException();
        public override void OnReplayDeserialize(ReplayState state) => throw new System.NotImplementedException();
    }
}