/// <summary>
/// This source file was auto-generated by a tool - Any changes may be overwritten!
/// From Unity assembly definition: UltimateReplay.dll
/// From source file: Assets/Ultimate Replay 3.0/Scripts/Runtime/ReplayComponents/ReplayMaterial.cs
/// </summary>
using System;
using UltimateReplay.Serializers;
using UnityEngine;

namespace UltimateReplay
{
    public class ReplayMaterial : ReplayRecordableBehaviour
    {
        // Types
        [Flags]
        public enum ReplayMaterialFlags
        {
            None = 0,
            SharedMaterial = 1 << 0,
            Color = 1 << 1,
            MainTextureOffset = 1 << 2,
            MainTextureScale = 1 << 3,
            DoubleSidedGlobalIllumination = 1 << 4,
            GlobalIlluminationFlags = 1 << 5,
            Interpolate = 1 << 6,
        }

        // Public
        public Renderer observedRenderer = null;
        [HideInInspector]
        public ReplayMaterialFlags recordFlags;
        [Tooltip("The index of the renderer material to record or '-1' if the main material should be used")]
        public int materialIndex;
        // Methods
        protected override void Reset() => throw new System.NotImplementedException();
        protected override void OnReplayReset() => throw new System.NotImplementedException();
        protected override void OnReplayUpdate(float t) => throw new System.NotImplementedException();
        public override void OnReplaySerialize(ReplayState state) => throw new System.NotImplementedException();
        public override void OnReplayDeserialize(ReplayState state) => throw new System.NotImplementedException();
    }
}