/// <summary>
/// This source file was auto-generated by a tool - Any changes may be overwritten!
/// From Unity assembly definition: UltimateReplay.dll
/// From source file: Assets/Ultimate Replay 3.0/Scripts/Runtime/ReplayComponents/ReplayComponentEnabledState.cs
/// </summary>
using UltimateReplay.Formatters;
using UnityEngine;

namespace UltimateReplay
{
    /// <summary>
    /// A replay component used to record the enabled state of a behaviour component.
    /// </summary>
    public class ReplayComponentEnabledState : ReplayRecordableBehaviour
    {
        // Public
        /// <summary>
        /// The behaviour component that will have its enabled state recorded and replayed.
        /// </summary>
        public Behaviour observedComponent;
        // Properties
        /// <summary>
        /// Get the formatter for this replay component.
        /// </summary>
        public override ReplayFormatter Formatter
        {
            get
            {
                return formatter;
            }
        }

        // Methods
        /// <summary>
        /// Reset this replay component.
        /// </summary>
        protected override void Reset() => throw new System.NotImplementedException();
        /// <summary>
        /// Called by the replay system when the component should serialize its recorded data.
        /// </summary>
        /// <param name = "state">The <see cref = "ReplayState"/> to write to</param>
        public override void OnReplaySerialize(ReplayState state) => throw new System.NotImplementedException();
        /// <summary>
        /// Called by the replay system when the component should deserialize previously recorded data.
        /// </summary>
        /// <param name = "state">The <see cref = "ReplayState"/> to read from</param>
        public override void OnReplayDeserialize(ReplayState state) => throw new System.NotImplementedException();
    }
}