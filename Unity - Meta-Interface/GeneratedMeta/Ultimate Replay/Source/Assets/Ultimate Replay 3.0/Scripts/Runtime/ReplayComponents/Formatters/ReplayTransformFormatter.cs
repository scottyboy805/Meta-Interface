/// <summary>
/// This source file was auto-generated by a tool - Any changes may be overwritten!
/// From Unity assembly definition: UltimateReplay.dll
/// From source file: Assets/Ultimate Replay 3.0/Scripts/Runtime/ReplayComponents/Formatters/ReplayTransformFormatter.cs
/// </summary>
using System;
using UnityEngine;

namespace UltimateReplay.Formatters
{
    public sealed class ReplayTransformFormatter : ReplayFormatter
    {
        public Vector3 Position => throw new System.NotImplementedException();
        public RecordAxisFlags PositionAxis
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordSpace PositionSpace
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordPrecision PositionPrecision
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public Quaternion Rotation => throw new System.NotImplementedException();
        public RecordAxisFlags RotationAxis
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordSpace RotationSpace
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordPrecision RotationPrecision
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public Vector3 Scale => throw new System.NotImplementedException();
        public RecordAxisFlags ScaleAxis
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordPrecision ScalePrecision
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        // Methods
        public override void OnReplaySerialize(ReplayState state) => throw new System.NotImplementedException();
        public override void OnReplayDeserialize(ReplayState state) => throw new System.NotImplementedException();
        public void SyncTransform(Transform sync) => throw new System.NotImplementedException();
        public void SyncTransformPosition(Transform sync) => throw new System.NotImplementedException();
        public void SyncTransformRotation(Transform sync) => throw new System.NotImplementedException();
        public void SyncTransformScale(Transform sync) => throw new System.NotImplementedException();
        public void UpdateFromTransform(Transform from, bool includeScale = false) => throw new System.NotImplementedException();
        public void UpdateFromTransform(Transform from, RecordAxisFlags position, RecordAxisFlags rotation, RecordAxisFlags scale = RecordAxisFlags.None, RecordSpace positionSpace = RecordSpace.World, RecordSpace rotationSpace = RecordSpace.World, RecordPrecision positionPrecision = RecordPrecision.FullPrecision32Bit, RecordPrecision rotationPrecision = RecordPrecision.FullPrecision32Bit, RecordPrecision scalePrecision = RecordPrecision.FullPrecision32Bit) => throw new System.NotImplementedException();
    }
}