/// <summary>
/// This source file was auto-generated by a tool - Any changes may be overwritten!
/// From Unity assembly definition: UltimateReplay.dll
/// From source file: Assets/Ultimate Replay 3.0/Scripts/Runtime/ReplayComponents/Serializers/ReplayMaterialChangeSerializer.cs
/// </summary>
using System;
using System.Collections.Generic;
using UnityEngine;

namespace UltimateReplay.Serializers
{
    public sealed class ReplayMaterialChangeSerializer : IReplaySerialize
    {
        // Types
        [Flags]
        public enum ReplayMaterialChangeSerializeFlags : ushort
        {
            SharedMaterial = 1 << 0,
            AllMaterials = 1 << 1,
            _8BitIndex = 1 << 2,
            _16BitIndex = 1 << 3,
            _32BitIndex = 1 << 4,
        }

        // Properties
        public int MaterialIndex
        {
            get => throw new System.NotImplementedException();
        }

        public int[] MaterialIndexes
        {
            get => throw new System.NotImplementedException();
        }

        public ReplayMaterialChangeSerializeFlags SerializeFlags
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        // Methods
        public void OnReplaySerialize(ReplayState state) => throw new System.NotImplementedException();
        public void OnReplayDeserialize(ReplayState state) => throw new System.NotImplementedException();
        public void SetActiveMaterial(IList<Material> possibleMaterials, Material activeMaterial) => throw new System.NotImplementedException();
        public void SetActiveMaterials(IList<Material> possibleMaterials, Material[] activeMaterials) => throw new System.NotImplementedException();
        public Material GetActiveMaterial(IList<Material> possibleMaterials) => throw new System.NotImplementedException();
        public int GetActiveMaterials(IList<Material> possibleMaterials, Material[] results) => throw new System.NotImplementedException();
    }
}