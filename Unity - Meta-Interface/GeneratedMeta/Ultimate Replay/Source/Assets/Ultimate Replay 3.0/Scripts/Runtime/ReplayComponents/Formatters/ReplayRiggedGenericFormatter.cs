/// <summary>
/// This source file was auto-generated by a tool - Any changes may be overwritten!
/// From Unity assembly definition: UltimateReplay.dll
/// From source file: Assets/Ultimate Replay 3.0/Scripts/Runtime/ReplayComponents/Formatters/ReplayRiggedGenericFormatter.cs
/// </summary>
using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using UltimateReplay.Storage;
using UnityEngine;

namespace UltimateReplay.Formatters
{
    public sealed class ReplayRiggedGenericFormatter : ReplayFormatter
    {
        public Vector3 RootPosition => throw new System.NotImplementedException();
        public RecordAxisFlags RootPositionAxis
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordPrecision RootPositionPrecision
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public Quaternion RootRotation => throw new System.NotImplementedException();
        public RecordAxisFlags RootRotationAxis
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordPrecision RootRotationPrecision
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public Vector3 RootScale => throw new System.NotImplementedException();
        public RecordAxisFlags RootScaleAxis
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public int BoneCount
        {
            get => throw new System.NotImplementedException();
        }

        public RecordAxisFlags BonePositionAxis
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordPrecision BonePositionPrecision
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordAxisFlags BoneRotationAxis
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordPrecision BoneRotationPrecision
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordAxisFlags BoneScaleAxis
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public RecordPrecision BoneScalePrecision
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        // Methods
        public override void OnReplaySerialize(ReplayState state) => throw new System.NotImplementedException();
        public override void OnReplayDeserialize(ReplayState state) => throw new System.NotImplementedException();
        public void GetBoneTransform(int index, out Vector3 position, out Quaternion rotation, out Vector3 scale) => throw new System.NotImplementedException();
        public Vector3 GetBonePosition(int index) => throw new System.NotImplementedException();
        public Quaternion GetBoneRotation(int index) => throw new System.NotImplementedException();
        public Vector3 GetBoneScale(int index) => throw new System.NotImplementedException();
    }
}