/// <summary>
/// This source file was auto-generated by a tool - Any changes may be overwritten!
/// From Unity assembly definition: UltimateReplay.dll
/// From source file: Assets/Ultimate Replay 3.0/Scripts/Runtime/Storage/ReplayPersistentData.cs
/// </summary>
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using UnityEngine;

namespace UltimateReplay.Storage
{
    public sealed class ReplayPersistentData : IReplayStreamSerialize, IReplayTokenSerialize
    {
        // Properties
        public IEnumerable<ReplayIdentity> PersistentIdentitiesByTimestamp
        {
            get
            {
                return persistentDataByTimestamp != null ? persistentDataByTimestamp.Keys : Enumerable.Empty<ReplayIdentity>();
            }
        }

        public IEnumerable<ReplayIdentity> PersistentIdentities
        {
            get
            {
                return persistentData != null ? persistentData.Keys : Enumerable.Empty<ReplayIdentity>();
            }
        }

        public bool HasPersistentDataByTimestamp(ReplayIdentity id) => throw new System.NotImplementedException();
        public void StorePersistentDataByTimestamp(ReplayIdentity id, float timestamp, ReplayState state) => throw new System.NotImplementedException();
        public ReplayState FetchPersistentDataByTimestamp(ReplayIdentity id, float timestamp) => throw new System.NotImplementedException();
        public bool HasPersistentData(ReplayIdentity id) => throw new System.NotImplementedException();
        public ReplayState FetchPersistentData(ReplayIdentity id) => throw new System.NotImplementedException();
        public void StorePersistentData(ReplayIdentity id, ReplayState state) => throw new System.NotImplementedException();
        public bool CopyTo(ReplayPersistentData destination) => throw new System.NotImplementedException();
    }
}