/// <summary>
/// This source file was auto-generated by a tool - Any changes may be overwritten!
/// From Unity assembly definition: UltimateReplay.dll
/// From source file: Assets/Ultimate Replay 3.0/Scripts/Runtime/ReplayComponents/Formatters/ReplayParticleSystemFormatter.cs
/// </summary>
using UnityEngine;

namespace UltimateReplay.Formatters
{
    public sealed class ReplayParticleSystemFormatter : ReplayFormatter
    {
        // Types
        public enum ReplayParticleSystemSerializeFlags : byte
        {
            None = 0,
            LowPrecision = 1 << 1,
        }

        public uint RandomSeed
        {
            get => throw new System.NotImplementedException();
        }

        public float SimulationTime
        {
            get => throw new System.NotImplementedException();
        }

        public bool IsPlaying
        {
            get => throw new System.NotImplementedException();
        }

        // Methods
        public override void OnReplaySerialize(ReplayState state) => throw new System.NotImplementedException();
        public override void OnReplayDeserialize(ReplayState state) => throw new System.NotImplementedException();
        public void SyncParticleSystem(ParticleSystem sync) => throw new System.NotImplementedException();
        public void UpdateFromParticleSystem(ParticleSystem from, bool lowPrecision = false) => throw new System.NotImplementedException();
    }
}