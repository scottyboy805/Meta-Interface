/// <summary>
/// This source file was auto-generated by a tool - Any changes may be overwritten!
/// From Unity assembly definition: UltimateReplay.dll
/// From source file: Assets/Ultimate Replay 3.0/Scripts/Runtime/Common/StatePreparation/ComponentPreparer.cs
/// </summary>
using UnityEngine;
using System.Collections.Generic;
using System;
using System.Reflection;

namespace UltimateReplay.StatePreparation
{
    public abstract class ComponentPreparer
    {
        // Properties
        public bool enabled = true;
        // Properties
        public static IReadOnlyList<ComponentPreparer> Preparers
        {
            get => throw new System.NotImplementedException();
        }

        protected internal ReplayComponentPreparerAttribute Attribute
        {
            get => throw new System.NotImplementedException();
            set => throw new System.NotImplementedException();
        }

        public static void InitializePreparers() => throw new System.NotImplementedException();
        public static ComponentPreparer FindPreparer(Type componentType) => throw new System.NotImplementedException();
    }

    public abstract class ComponentPreparer<T> : ComponentPreparer where T : Component
    {
        // Methods
        public abstract void PrepareForPlayback(T component, ReplayState additionalData);
        public abstract void PrepareForGameplay(T component, ReplayState additionalData);
    }
}