/// <summary>
/// This source file was auto-generated by a tool - Any changes may be overwritten!
/// From Unity assembly definition: UltimateReplay.dll
/// From source file: Assets/Ultimate Replay 3.0/Scripts/Runtime/Common/DefaultReplayPreparer.cs
/// </summary>
using System;
using System.Collections.Generic;
using UnityEngine;

namespace UltimateReplay.StatePreparation
{
    /// <summary>
    /// The default <see cref = "IReplayPreparer"/> used by Ultimate Replay to prepare game objects for gameplay and playback.
    /// </summary>
    [Serializable]
    public class DefaultReplayPreparer : IReplayPreparer, ISerializationCallbackReceiver
    {
        // Types
        [Serializable]
        public class ComponentPreparerSettings
        {
            // Public
            public SerializableType componentPreparerType;
            public bool enabled = true;
        }

        // Properties
        public IList<SerializableType> SkipTypes
        {
            get
            {
                return skipTypes;
            }
        }

        public IList<ComponentPreparerSettings> PreparerSettings
        {
            get
            {
                return preparerSettings;
            }
        }

        // Constructor
        /// <summary>
        /// Create a new instance.
        /// </summary>
        static DefaultReplayPreparer()
        {
            // Load all preparers
            ComponentPreparer.InitializePreparers();
        }

        // Methods
        /// <summary>
        /// Prepare the specified replay object for playback mode.
        /// </summary>
        /// <param name = "replayObject">The replay object to prepare</param>
        public virtual void PrepareForPlayback(ReplayObject replayObject) => throw new System.NotImplementedException();
        /// <summary>
        /// Prepare the specified replay object for gameplay mode.
        /// </summary>
        /// <param name = "replayObject">The replay object to prepare</param>
        public virtual void PrepareForGameplay(ReplayObject replayObject) => throw new System.NotImplementedException();
        public bool HasSkipType(Type systemType) => throw new System.NotImplementedException();
        public void OnBeforeSerialize() => throw new System.NotImplementedException();
        public void OnAfterDeserialize() => throw new System.NotImplementedException();
        public DefaultReplayPreparer CreateInstance() => throw new System.NotImplementedException();
    }
}