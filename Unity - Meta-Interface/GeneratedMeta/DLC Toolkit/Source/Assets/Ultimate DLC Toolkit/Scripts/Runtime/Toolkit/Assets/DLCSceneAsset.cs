/// <summary>
/// This source file was auto-generated by a tool - Any changes may be overwritten!
/// From Unity assembly definition: DLCToolkit.dll
/// From source file: Assets/Ultimate DLC Toolkit/Scripts/Runtime/Toolkit/Assets/DLCSceneAsset.cs
/// </summary>
using DLCToolkit.Format;
using System;
using System.Collections;
using UnityEngine;
using UnityEngine.SceneManagement;

namespace DLCToolkit.Assets
{
    /// <summary>
    /// Represents a scene asset included in the DLC.
    /// Scene assets are simply Unity scenes.
    /// </summary>
    public sealed class DLCSceneAsset : DLCAsset
    {
        // Constructor
        internal DLCSceneAsset(IDLCAsyncProvider asyncProvider, DLCContentBundle contentBundle, DLCLoadMode loadMode, int assetID, string fullName, string relativeName): base(default, default, default, default, default, default, default) => throw new System.NotImplementedException();
        // Methods
        /// <summary>
        /// Load the <see cref = "DLCSceneAsset"/>. 
        /// </summary>
        /// <param name = "loadSceneMode">The mode to use when loading the scene</param>
        public void Load(LoadSceneMode loadSceneMode) => throw new System.NotImplementedException();
        /// <summary>
        /// Load the <see cref = "DLCSceneAsset"/>.
        /// </summary>
        /// <param name = "loadSceneParameters">The load scene parameters to use when loading the scene</param>
        public void Load(LoadSceneParameters loadSceneParameters) => throw new System.NotImplementedException();
        /// <summary>
        /// Load the <see cref = "DLCSceneAsset"/> asynchronously. 
        /// </summary>
        /// <param name = "loadSceneMode">Should the scene be additively loaded into the current scene</param>
        /// <param name = "allowSceneActivation">Should the scene be activated as soon as it is loaded</param>
        public DLCAsync LoadAsync(LoadSceneMode loadSceneMode, bool allowSceneActivation = true) => throw new System.NotImplementedException();
        /// <summary>
        /// Load the <see cref = "DLCSceneAsset"/> asynchronously. 
        /// </summary>
        /// <param name = "loadSceneParameters">The parameters to use when loading the scene</param>
        /// <param name = "allowSceneActivation">Should the scene be activated as soon as it is loaded</param>
        public DLCAsync LoadAsync(LoadSceneParameters loadSceneParameters, bool allowSceneActivation = true) => throw new System.NotImplementedException();
        /// <summary>
        /// Attempt to switch activation to the current streamed scene loaded during the last async load operation.
        /// This is the same as setting `allowSceneActivation` to true and can be used to switch from a loading screen at a suitable time.
        /// You must use one of the <see cref = "LoadAsync(LoadSceneMode, bool)"/> methods first with `allowSceneActivation` set to `false`.
        /// </summary>
        /// <exception cref = "InvalidOperationException">There is no pending load scene operation</exception>
        public void ActivatePendingScene() => throw new System.NotImplementedException();
    }
}